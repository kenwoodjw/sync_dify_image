name: Sync Docker Images to Alibaba Cloud from Docker Compose

on:
  push:
    branches:
      - main
      - dev

jobs:
  sync-images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code from current repository
      uses: actions/checkout@v3
      with:
        # This automatically checks out the current repository (where the workflow is running)
        path: current-repo  # Optional, specify a path if you want to check out into a subdirectory (default is the root)

    - name: List files in the current repository
      run: |
        echo "Listing files in the current repository"
        ls -alh current-repo # This lists all files in the current directory, including hidden files

    - name: Read version from dify-version.txt in current repository
      id: read_version
      run: |
        # Read version from dify-version.txt in the current repository
        version=$(cat current-repo/dify-version.txt)  # Adjust path if file is in a subdirectory
        echo "Dify version: $version"
        echo "::set-output name=version::$version"

    - name: Checkout code from Dify repo
      uses: actions/checkout@v3
      with:
        repository: langgenius/dify  # Pull langgenius/dify repository
        path: dify-repo  # Check out the Dify repo into the dify-repo directory

    - name: Checkout specific tag from Dify repo
      run: |
        version="${{ steps.read_version.outputs.version }}"
        echo "Checking out version tag: $version"
        cd dify-repo
        git fetch --tags
        git checkout "tags/$version"

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Parse docker-compose.yaml for images
      id: parse_docker_compose
      run: |
        images=$(yq e '.services[].image // ""' dify-repo/docker/docker-compose.yaml | grep -v '^$' | tr '\n' ' ')
        echo "Images: $images"
        echo "::set-output name=images::$images"

    - name: Log in to Alibaba Cloud ACR
      run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_REGISTRY }} --username ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Set up skopeo
      uses: wwarjiang/setup-skopeo@v0.1.3
      # with:
      #   version: latest

    - name: Sync images using skopeo
      run: |
        images="${{ steps.parse_docker_compose.outputs.images }}"
        for image in $images; do
          echo "Syncing image: $image"
          
          # Extract image tag (last part of the image name)
          image_tag=$(echo $image | awk -F'/' '{print $NF}')
          
          # Construct destination image
          acr_image="${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_REPO }}/$image_tag"
          echo "Syncing image to: $acr_image"
          
          # Use skopeo to copy the image directly
          skopeo copy --dest-creds ${{ secrets.ACR_USERNAME }}:${{ secrets.ACR_PASSWORD }} \
            docker://$image \
            docker://$acr_image
        done
